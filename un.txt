{ type: 'ContractDefinition',
  name: 'Search',
  baseContracts: [],
  subNodes: 
   [ { type: 'FunctionDefinition',
       name: 'indexOf',
       parameters: [Array],
       returnParameters: [Array],
       body: [Object],
       visibility: 'public',
       modifiers: [],
       isConstructor: false,
       stateMutability: 'view',
       loc: [Object] } ],
  kind: 'library',
  loc: { start: { line: 3, column: 0 }, end: { line: 8, column: 0 } } }
{ type: 'FunctionDefinition',
  name: 'indexOf',
  parameters: 
   [ { type: 'VariableDeclaration',
       typeName: [Object],
       name: 'self',
       storageLocation: 'storage',
       isStateVar: false,
       isIndexed: false,
       loc: [Object] },
     { type: 'VariableDeclaration',
       typeName: [Object],
       name: 'value',
       storageLocation: null,
       isStateVar: false,
       isIndexed: false,
       loc: [Object] } ],
  returnParameters: 
   [ { type: 'VariableDeclaration',
       typeName: [Object],
       name: null,
       storageLocation: null,
       isStateVar: false,
       isIndexed: false,
       loc: [Object] } ],
  body: 
   { type: 'Block',
     statements: [ [Object], [Object] ],
     loc: { start: [Object], end: [Object] } },
  visibility: 'public',
  modifiers: [],
  isConstructor: false,
  stateMutability: 'view',
  loc: { start: { line: 4, column: 3 }, end: { line: 7, column: 3 } } }
{ type: 'VariableDeclaration',
  typeName: 
   { type: 'ArrayTypeName',
     baseTypeName: { type: 'ElementaryTypeName', name: 'uint', loc: [Object] },
     length: null,
     loc: { start: [Object], end: [Object] } },
  name: 'self',
  storageLocation: 'storage',
  isStateVar: false,
  isIndexed: false,
  loc: { start: { line: 4, column: 20 }, end: { line: 4, column: 35 } } }
{ type: 'VariableDeclaration',
  typeName: 
   { type: 'ElementaryTypeName',
     name: 'uint',
     loc: { start: [Object], end: [Object] } },
  name: 'value',
  storageLocation: null,
  isStateVar: false,
  isIndexed: false,
  loc: { start: { line: 4, column: 41 }, end: { line: 4, column: 46 } } }
{ type: 'VariableDeclaration',
  typeName: 
   { type: 'ElementaryTypeName',
     name: 'uint',
     loc: { start: [Object], end: [Object] } },
  name: null,
  storageLocation: null,
  isStateVar: false,
  isIndexed: false,
  loc: { start: { line: 4, column: 74 }, end: { line: 4, column: 74 } } }
{ type: 'ForStatement',
  initExpression: 
   { type: 'VariableDeclarationStatement',
     variables: [ [Object] ],
     variable_name: 'i',
     initialValue: 
      { type: 'NumberLiteral',
        number: '0',
        subdenomination: null,
        loc: [Object] },
     loc: { start: [Object], end: [Object] } },
  conditionExpression: 
   { type: 'BinaryOperation',
     operator: '<',
     left: { type: 'Identifier', name: 'i', loc: [Object] },
     right: 
      { type: 'MemberAccess',
        expression: [Object],
        expression_name: 'self',
        memberName: 'length',
        loc: [Object] },
     loc: { start: [Object], end: [Object] } },
  loopExpression: 
   { type: 'ExpressionStatement',
     expression: 
      { type: 'UnaryOperation',
        operator: '++',
        subExpression: [Object],
        isPrefix: false,
        loc: [Object] } },
  body: 
   { type: 'IfStatement',
     condition: 
      { type: 'BinaryOperation',
        operator: '==',
        left: [Object],
        right: [Object],
        loc: [Object] },
     trueBody: { type: 'ReturnStatement', expression: [Object], loc: [Object] },
     falseBody: null,
     loc: { start: [Object], end: [Object] } },
  loc: { start: { line: 5, column: 6 }, end: { line: 5, column: 75 } } }
{ type: 'VariableDeclaration',
  typeName: 
   { type: 'ElementaryTypeName',
     name: 'uint',
     loc: { start: [Object], end: [Object] } },
  name: 'i',
  storageLocation: null,
  isStateVar: false,
  isIndexed: false,
  loc: { start: { line: 5, column: 11 }, end: { line: 5, column: 16 } } }
{ type: 'ExpressionStatement',
  expression: 
   { type: 'UnaryOperation',
     operator: '++',
     subExpression: { type: 'Identifier', name: 'i', loc: [Object] },
     isPrefix: false,
     loc: { start: [Object], end: [Object] } } }
{ type: 'IfStatement',
  condition: 
   { type: 'BinaryOperation',
     operator: '==',
     left: 
      { type: 'IndexAccess',
        base: [Object],
        index: [Object],
        base_val: 'self',
        index_val: 'i',
        loc: [Object] },
     right: { type: 'Identifier', name: 'value', loc: [Object] },
     loc: { start: [Object], end: [Object] } },
  trueBody: 
   { type: 'ReturnStatement',
     expression: { type: 'Identifier', name: 'i', loc: [Object] },
     loc: { start: [Object], end: [Object] } },
  falseBody: null,
  loc: { start: { line: 5, column: 45 }, end: { line: 5, column: 75 } } }
{ type: 'FunctionCall',
  expression: 
   { type: 'ElementaryTypeNameExpression',
     typeName: { type: 'ElementaryTypeName', name: 'uint', loc: [Object] },
     loc: { start: [Object], end: [Object] } },
  arguments: 
   [ { type: 'UnaryOperation',
       operator: '-',
       subExpression: [Object],
       isPrefix: true,
       loc: [Object] } ],
  names: [],
  loc: { start: { line: 6, column: 13 }, end: { line: 6, column: 20 } } }
{ type: 'VariableDeclaration',
  typeName: 
   { type: 'ArrayTypeName',
     baseTypeName: { type: 'ElementaryTypeName', name: 'uint', loc: [Object] },
     length: null,
     loc: { start: [Object], end: [Object] } },
  name: 'self',
  storageLocation: 'storage',
  isStateVar: false,
  isIndexed: false,
  loc: { start: { line: 4, column: 20 }, end: { line: 4, column: 35 } } }
{ type: 'VariableDeclaration',
  typeName: 
   { type: 'ElementaryTypeName',
     name: 'uint',
     loc: { start: [Object], end: [Object] } },
  name: 'value',
  storageLocation: null,
  isStateVar: false,
  isIndexed: false,
  loc: { start: { line: 4, column: 41 }, end: { line: 4, column: 46 } } }
{ type: 'VariableDeclaration',
  typeName: 
   { type: 'ElementaryTypeName',
     name: 'uint',
     loc: { start: [Object], end: [Object] } },
  name: null,
  storageLocation: null,
  isStateVar: false,
  isIndexed: false,
  loc: { start: { line: 4, column: 74 }, end: { line: 4, column: 74 } } }
{ type: 'VariableDeclaration',
  typeName: 
   { type: 'ElementaryTypeName',
     name: 'uint',
     loc: { start: [Object], end: [Object] } },
  name: 'i',
  storageLocation: null,
  isStateVar: false,
  isIndexed: false,
  loc: { start: { line: 5, column: 11 }, end: { line: 5, column: 16 } } }
{ type: 'ExpressionStatement',
  expression: 
   { type: 'UnaryOperation',
     operator: '++',
     subExpression: { type: 'Identifier', name: 'i', loc: [Object] },
     isPrefix: false,
     loc: { start: [Object], end: [Object] } } }
{ type: 'IfStatement',
  condition: 
   { type: 'BinaryOperation',
     operator: '==',
     left: 
      { type: 'IndexAccess',
        base: [Object],
        index: [Object],
        base_val: 'self',
        index_val: 'i',
        loc: [Object] },
     right: { type: 'Identifier', name: 'value', loc: [Object] },
     loc: { start: [Object], end: [Object] } },
  trueBody: 
   { type: 'ReturnStatement',
     expression: { type: 'Identifier', name: 'i', loc: [Object] },
     loc: { start: [Object], end: [Object] } },
  falseBody: null,
  loc: { start: { line: 5, column: 45 }, end: { line: 5, column: 75 } } }
